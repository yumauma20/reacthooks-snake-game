{"version":3,"sources":["components/Navigation.jsx","components/Field.jsx","components/Button.jsx","components/ManipulationPanel.jsx","utils/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","Field","fields","map","row","column","Button","status","onStart","onStop","onRestart","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","snake","i","cols","Array","fill","push","food","initialPosition","initialValues","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","right","left","down","OppositeDirection","Delta","DirectionKeyCodeMap","37","38","39","40","timer","undefined","unsubscribe","clearInterval","App","useState","setFields","body","setBody","setStatus","direction","setDirection","setDifficulty","tick","setTick","useEffect","setInterval","handleMoving","position","delta","newPosition","isEatingMyself","newBody","removingTrack","pop","unshift","onChangeDirection","useCallback","newDirection","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6d5613d4.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({ length, difficulty = 3, onChangeDifficulty }) => {\n  const upVisibility = difficulty < 5 ? '' :'is-hidden'\n  const downVisibility = difficulty > 1 ? '' : 'is-hidden'\n  const onUpDifficulty = () => onChangeDifficulty(difficulty + 1)\n  const onDownDifficulty = () => onChangeDifficulty(difficulty - 1)\n\n  return (\n    <div className=\"navigation\">\n      <div className=\"navigation-item\">\n          <span className=\"navigation-label\">Length: </span>\n          <div className=\"navigation-item-number-container\">\n            <div className=\"num-board\">{length}</div>\n          </div>\n      </div>\n      <div className=\"navigation-item\">\n        <span className=\"navigation-label\">Difficulty: </span>\n        <div className=\"navigation-item-number-container\">\n          <span className=\"num-board\">{difficulty}</span>\n          <div className=\"difficulty-button-container\">\n            <div\n              className={`difficulty-button difficulty-up ${upVisibility}`}\n              onClick={onUpDifficulty}\n            >\n            </div>\n            <div\n              className={`difficulty-button difficulty-down ${downVisibility}`}\n              onClick={onDownDifficulty}\n            >\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default Navigation;","import React from 'react';\n\nconst Field = ({ fields }) => {\n  return (\n    <div className=\"field\">\n    {\n      fields.map((row) => {\n        return row.map((column) => {\n          return <div className={`dots ${column}`}></div>\n        })\n      })\n    }\n    </div>\n  );\n};\n\nexport default Field;","import React from 'react';\n\nconst Button = ({status, onStart, onStop, onRestart}) => {\n  return (\n    <div className=\"button\">\n      { status === \"gameover\" && <button className=\"btn btn-gameover\" onClick={onRestart}>gameover</button> }\n      { status === \"init\" && <button className=\"btn btn-init\" onClick={onStart}>start</button> }\n      { status === \"suspended\" && <button className=\"btn btn-suspended\" onClick={onStart}>start</button> }\n      { status === \"playing\" && <button className=\"btn btn-playing\" onClick={onStop}>stop</button> }\n    </div>\n  );\n};\n\nexport default Button;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faArrowLeft,\n  faArrowUp,\n  faArrowDown,\n  faArrowRight\n} from '@fortawesome/free-solid-svg-icons'\n\nconst ManipulationPanel = ({ onChange }) => {\n  const onUp = () => onChange('up')\n  const onRight = () => onChange('right')\n  const onLeft = () => onChange('left')\n  const onDown = () => onChange('down')\n\n  return (\n    <div className=\"manipulation-panel\">\n      <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>\n        <FontAwesomeIcon icon={faArrowLeft} />\n      </button>      \n      <div>\n        <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>\n          <FontAwesomeIcon icon={faArrowUp} />\n        </button>\n        <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>\n          <FontAwesomeIcon icon={faArrowDown} />\n        </button>\n      </div>\n      <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>\n        <FontAwesomeIcon icon={faArrowRight} />\n      </button>\n    </div>\n  );\n};\n\nexport default ManipulationPanel;","export const getFoodPosition = (fieldSize, excludes) => {\n  while(true) {\n    const x = Math.floor(Math.random() * (fieldSize - 2)) + 1;\n    const y = Math.floor(Math.random() * (fieldSize - 2)) + 1;\n    const conflict = excludes.some(item => item.x === x && item.y === y)\n\n    if(!conflict) {\n      return { x, y };\n    }\n  }\n}\n\nexport const initFields = (fieldSize, snake) => {\n  const fields = []\n  for(let i = 0; i < fieldSize; i++) {\n    const cols = new Array(fieldSize).fill('')\n    fields.push(cols)\n  }\n  fields[snake.y][snake.x] = 'snake';\n\n  const food = getFoodPosition(fieldSize, [snake])\n  fields[food.y][food.x] = 'food'\n\n  return fields\n}","import React, { useCallback, useEffect, useState } from 'react';\nimport Navigation from './components/Navigation';\nimport Field from './components/Field';\nimport Button from './components/Button';\nimport ManipulationPanel from './components/ManipulationPanel';\nimport { initFields, getFoodPosition } from './utils';\n\nconst initialPosition = {x : 17, y : 17}\nconst initialValues = initFields(35, initialPosition)\nconst defaultInterval = 100\nconst defaultDifficulty = 3\n\nconst Difficulty = [1000, 500, 100, 50, 10]\n\nconst GameStatus = Object.freeze({\n  init: 'init',\n  playing: 'playing',\n  suspended: 'suspended',\n  gameover: 'gameover'\n})\n\nconst Direction = Object.freeze({\n  up: 'up',\n  right: 'right',\n  left: 'left',\n  down: 'down'\n})\n\nconst OppositeDirection = Object.freeze({\n  up: 'down',\n  right: 'left',\n  left: 'right',\n  down: 'up'\n})\n\nconst Delta = Object.freeze({\n  up: { x: 0, y: -1 },\n  right: { x: 1, y: 0 },\n  left: { x: -1, y: 0 },\n  down: { x: 0, y: 1 },\n});\n\nconst DirectionKeyCodeMap = Object.freeze({\n  37: Direction.left,\n  38: Direction.up,\n  39: Direction.right,\n  40: Direction.down,\n})\n\nlet timer = undefined\n\nconst unsubscribe = () => {\n  if(!timer) {\n    return\n  }\n  clearInterval(timer)\n}\n\nconst isCollision = (fieldSize, position) => {\n  if (position.y < 0 || position.x < 0) {\n    return true\n  }\n\n  if (position.y > fieldSize - 1 || position.x > fieldSize - 1) {\n    return true\n  }\n\n  return false\n}\n\nconst isEatingMyself = (fields, position) => {\n  return fields[position.y][position.x] === 'snake'\n}\n\nfunction App() {\n  const [fields, setFields] = useState(initialValues)\n  const [body, setBody] = useState([])\n  const [status, setStatus] = useState(GameStatus.init)\n  const [direction, setDirection] = useState(Direction.up)\n  const [difficulty, setDifficulty] = useState(defaultDifficulty)\n  const [tick, setTick] = useState(0)\n\n  useEffect(() => {\n    setBody([initialPosition])\n    //ゲーム中の時間を管理する\n    const interval = Difficulty[difficulty - 1]\n    timer = setInterval(() => {\n      setTick(tick => tick + 1)\n    }, interval)\n    return unsubscribe /* return部分はコンポーネントが削除されるタイミングで実行される */\n  },[difficulty])\n\n  //初回レンタリング時とtick(依存変数の配列)が変更されるときにレンタリングされる際に実行される\n  useEffect(() => {\n    if(!body || status !== GameStatus.playing) {\n      return\n    }\n    \n    const canContinue = handleMoving()\n    if(!canContinue) {\n      setStatus(GameStatus.gameover)\n    }\n  },[tick])\n\n  const onStart = () => setStatus(GameStatus.playing)\n\n  const onStop = () => setStatus(GameStatus.suspended)\n\n  const onRestart = () => {\n    timer = setInterval(() => {\n      setTick(tick => tick + 1)\n    }, defaultInterval)\n\n    setStatus(GameStatus.init)\n    setBody([initialPosition])\n    setDirection(Direction.up)\n    setDifficulty(defaultDifficulty)\n    setFields(initFields(35, initialPosition))\n  }\n\n  const handleMoving = () => {\n    const { x, y } = body[0]\n    const delta = Delta[direction]\n    const newPosition = {\n      x: x + delta.x,\n      y: y + delta.y\n    }\n\n    if(isCollision(fields.length, newPosition) || isEatingMyself(fields, newPosition)) {\n      unsubscribe()\n      return false\n    }\n\n    const newBody = [...body] /* useState以外での更新をするのはタブーなのでスプレッド構文でコピー */\n    if(fields[newPosition.y][newPosition.x] !== 'food') {\n      const removingTrack = newBody.pop()\n      fields[removingTrack.y][removingTrack.x] = ''\n    } else {\n      const food = getFoodPosition(fields.length, [...newBody, newPosition])\n      fields[food.y][food.x] = 'food'\n    }\n    fields[newPosition.y][newPosition.x] = 'snake'\n    newBody.unshift(newPosition)\n\n    setBody(newBody)\n    setFields(fields)\n    \n    return true\n  }\n\n  const onChangeDirection = useCallback((newDirection) => {\n    if(status !== GameStatus.playing) {\n      return\n    }\n    if(OppositeDirection[direction] === newDirection) {\n      return\n    }\n    setDirection(newDirection)\n  },[direction, status])\n\n  const onChangeDifficulty = useCallback((difficulty) => {\n    if(status !== GameStatus.init) {\n      return\n    }\n    if(difficulty < 1 || difficulty > difficulty.length) {\n      return\n    }\n    setDifficulty(difficulty)\n  },[status, difficulty])\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      const newDirection = DirectionKeyCodeMap[e.keyCode]\n      if(!newDirection) {\n        return\n      }\n\n      onChangeDirection(newDirection)\n    }\n\n    document.addEventListener('keydown', handleKeyDown)\n    return () => document.removeEventListener('keydown', handleKeyDown)\n  }, [onChangeDirection])\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <div className=\"title-container\">\n          <h1 className=\"title\">Snake Game</h1>\n        </div>\n        <Navigation\n          length={body.length}\n          difficulty={difficulty}\n          onChangeDifficulty={onChangeDifficulty}\n        />\n      </header>\n      <main className=\"main\">\n        <Field fields={fields}/>\n      </main>\n      <footer className=\"footer\">\n        <Button\n          status={status}\n          onStart={onStart}\n          onStop={onStop}\n          onRestart={onRestart}\n        />\n        <ManipulationPanel onChange={onChangeDirection}/>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}